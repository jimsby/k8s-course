apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-service-deployment
  namespace: {{ include "my-chart.postservice-namespace" . }}
spec:
  replicas: {{ .Values.services.postService.replicaCount }}
  selector:
    matchLabels:
      app: post-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: post-service
    spec:
      containers:
        - name: post-service
          image: "{{ .Values.services.postService.image.repository }}:{{ .Values.services.postService.image.tag | default .Chart.AppVersion }}"
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 3
          envFrom:
            - configMapRef:
                name: k8s-course-configmap
            - secretRef:
                name: k8s-course-secret
---
apiVersion: v1
kind: Service
metadata:
  name: post-service
  namespace: {{ include "my-chart.postservice-namespace" . }}
spec:
  type: ClusterIP
  ports:
    - name: "default-port"
      protocol: "TCP"
      port: 8080
      targetPort: 8080
  selector:
    app: post-service